---
const navItems = [
  { name: 'Home', href: '/' },
  { name: 'About', href: '/about' },
  { name: 'Donate', href: '/donate' },
  { name: 'Programs', href: '/programs' },
  { name: 'Blog', href: '/blog' },
  { name: 'Gallery', href: '/gallery' },
  { name: 'Contact', href: '/contact' },
];
---

<header class="sticky top-0 z-50 transition-all duration-300 bg-primary-900/10 backdrop-blur-md border-b border-white/20 shadow-md" id="header">
  <nav class="container mx-auto px-4 sm:px-6 lg:px-8 py-4">
    <div class="flex items-center justify-between">
      <!-- Logo and Tagline -->
      <div class="flex items-center space-x-4">
        <div class="h-12 w-12 bg-accent-yellow/90 rounded-full flex items-center justify-center transform hover:scale-105 hover:shadow-glow transition-all duration-300">
          <svg class="w-7 h-7 text-primary-900" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
            <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd"/>
          </svg>
        </div>
        <div>
          <h1 class="text-xl sm:text-2xl font-extrabold text-gray font-sans">Otacho Hands of Grace</h1>
          <p class="text-xs sm:text-sm text-gray-700">Community Care</p>
        </div>
      </div>

      <!-- Desktop Navigation -->
      <ul class="hidden md:flex space-x-6 lg:space-x-8">
        {navItems.map((item) => (
          <li>
            <a 
              href={item.href} 
              class="relative text-gray text-sm lg:text-base font-medium hover:text-accent-yellow transition-colors duration-200 group"
            >
              {item.name}
              <span class="absolute left-0 bottom-0 w-0 h-0.5 bg-gradient-to-r from-primary-700 to-accent-yellow transition-all duration-300 group-hover:w-full"></span>
            </a>
          </li>
        ))}
      </ul>

      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button"
        class="md:hidden p-2 focus:outline-none"
        aria-label="Toggle mobile menu"
        aria-expanded="false"
      >
        <div class="w-6 h-5 relative">
          <span class="absolute w-6 h-0.5 bg-gray-900 rounded top-0 transition-all duration-300" id="top-bar"></span>
          <span class="absolute w-6 h-0.5 bg-gray-900 rounded top-2 transition-all duration-300" id="middle-bar"></span>
          <span class="absolute w-6 h-0.5 bg-gray-900 rounded top-4 transition-all duration-300" id="bottom-bar"></span>
        </div>
      </button>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="md:hidden hidden absolute top-full left-0 w-full bg-primary-900/20 backdrop-blur-lg border-t border-white/20 transition-all duration-300">
      <ul class="flex flex-col items-center py-8 space-y-6">
        {navItems.map((item) => (
          <li>
            <a 
              href={item.href} 
              class="text-white text-lg font-medium hover:text-accent-yellow transition-colors duration-200"
            >
              {item.name}
            </a>
          </li>
        ))}
      </ul>
    </div>
  </nav>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const header = document.getElementById('header');
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const topBar = document.getElementById('top-bar');
    const middleBar = document.getElementById('middle-bar');
    const bottomBar = document.getElementById('bottom-bar');

    if (header) {
      const handleScroll = () => {
        if (window.scrollY > 0) {
          header.classList.add('bg-white/90', 'shadow-lg');
          header.classList.remove('bg-primary-900/10', 'shadow-md');
        } else {
          header.classList.add('bg-primary-900/10', 'shadow-md');
          header.classList.remove('bg-white/90', 'shadow-lg');
        }
      };

      window.addEventListener('scroll', handleScroll);
      handleScroll(); // Initial check
    }

    if (mobileMenuButton && mobileMenu && topBar && middleBar && bottomBar) {
      mobileMenuButton.addEventListener('click', () => {
        const isOpen = !mobileMenu.classList.contains('hidden');
        mobileMenu.classList.toggle('hidden');
        mobileMenuButton.setAttribute('aria-expanded', (!isOpen).toString());

        // Hamburger to cross animation
        if (!isOpen) {
          topBar.classList.add('rotate-45', 'top-2');
          middleBar.classList.add('opacity-0');
          bottomBar.classList.add('-rotate-45', 'top-2');
        } else {
          topBar.classList.remove('rotate-45', 'top-2');
          middleBar.classList.remove('opacity-0');
          bottomBar.classList.remove('-rotate-45', 'top-2');
        }
      });
    }
  });
</script>

<style>
  :root {
    --primary-blue: #1e40af;
    --accent-yellow: #facc15;
  }
  .font-sans {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  }
  .shadow-glow {
    box-shadow: 0 0 12px rgba(250, 204, 21, 0.5);
  }
</style>